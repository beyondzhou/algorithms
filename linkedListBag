# Implement Bag using linked list
class LinkedListBag:
    # Init
    def __init__(self):
        self._head = None
        self._size = 0

    # Length
    def __len__(self):
        return self._size

    # Contain
    def __contains__(self, target):
        curNode = self._head
        while curNode is not None and curNode.data != target:
            curNode = curNode.next

        return curNode is not None

    # Add
    def add(self, element):
        newItem = LinkedListBagElement(element)
        newItem.next = self._head
        self._head = newItem
        self._size += 1

    # Remove
    def remove(self, element):
        preNode = None
        curNode = self._head
        while curNode is not None and curNode.data != element:
            preNode = curNode
            curNode = curNode.next

        assert curNode is not None, "element is not in the Bag."
        self._size -= 1

        if curNode is self._head:
            self._head = curNode.next
        else:
            preNode.next = curNode.next

        return curNode.data

    # Iter
    def __iter__(self):
        return LinkedListBagIterator(self._head)

# Bag storage
class LinkedListBagElement:
    # Init
    def __init__(self, data):
        self.data = data
        self.next = None
        
# Bag iter
class LinkedListBagIterator:
    # Init
    def __init__(self, head):
        self.curNode = head
    def __iter__(self):
        return self
    def next(self):
        if self.curNode is not None:
            value = self.curNode.data
            self.curNode = self.curNode.next
            return value
        else:
            raise StopIteration
        
def test_linkedListBag():
    
    # init a set named smith
    smith = LinkedListBag()
    smith.add('CSCI-112')
    smith.add('MATH-121')
    smith.add('HIST-340')
    smith.add('ECON-101')
    
    print 'smith: '
    for item in smith:
        print item,
    
    # init a set named roberts
    roberts = LinkedListBag()
    roberts.add('POL-101')
    roberts.add('ANTH-230')
    roberts.add('CSCI-112')
    roberts.add('ECON-101')
    
    print '\r\rroberts: '
    for item in roberts:
        print item,
        
    print '\r\rremove ECON-101 of smith'
    smith.remove('ECON-101')

    print '\r\rsmith: '
    for item in smith:
        print item,
        
    print '\r\rremove MATH-121 of smith'
    smith.remove('MATH-121')
            
    print '\r\rsmith: '
    for item in smith:
        print item,
        
    print '\r\rin check'
    print 'HIST-340' in smith 
    print 'MATH-121' in smith
    
if __name__ == "__main__":
    test_linkedListBag()
